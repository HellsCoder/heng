/*
    Это главный файл SPA приложения

    Follow me: 
    @vk: vk.com/bytecode
*/

/*
    Подключаем CommonJS модули ядра
*/
var Router = require('../heng/core/heng-router');
var Template = require('../heng/core/heng-template');

const routes = [
    {
        link: '/route',
        callback: function(){
            /*
                Эта функция будет вызвана когда пользователь прейдет по адресу /route
            */
            Template.render('itstemplate.html', {}, {}, function(){
                /*
                    1-ый аргумент название шаблона в папке templates
                    2-ой аргумент переменные шаблона
                    3-ий аргумент данные для загрузки шаблона
                    4-ый аргумент: функция, которая вызывается после загрузки шаблона
                */
                console.info("Шаблон для /route только что был загружен");
            });
        }
    }
];


/*
    Вызывается при загрузке приложения
*/
const initApplication = () => {
    /*
        Инициализируем Шаблонизатор(который будет рисовать шаблоны в блок #app)
        1-ый аргумент: блок, в который будут отрисовываться шаблоны
        2-ой аргумент: папка, где будут хранится шаблоны(проверьте ее, она тоже тут есть)
        3-ий аргумент: функция, которая будет вызываться после загрузки шаблона 
    */
    Template.init('#app', 'templates', function(){
        /*Эта функция будет вызвана когда шаблон загрузился */
    });
    /*
        Инициализируем Роутер(который смотрит адреса страниц)
    */
    Router.init(function(){
        /*
            Эта функция будет вызываться когда шаблон не найден. Рисуем 404
        */
        Template.render('404.html', {}, {}, function(){
            console.info("Роут не найден");
        });
    }, routes);
};





window.onload = initApplication;